#1.克隆githut库到本地
git clone HTTPS
#2.完成add commit push 提交代码
git add 
git commit
git commit -m ''
git push
git status   查看工作区状态（新建，更新，提交状态 ）
#3.将githut最新代码更新到本地
git pull
#4版本跳跃
git log
git reset --hard 版本号 
#查看所有日志
git reflog 
#回到当前版本（最新修改未提交前）
git reset --hard HEAD

#5.撤销代码修改
#工作区
git checkout -- git.properties
#暂存区（执行git add后），返回工作区
git reset HEAD log
#master分支（执行git commit 后），回退版本
git reset --hard 版本号

#6.分支创建&切换
git branch    查看分支
git branch -r 查看远程分支
git branch -l 查看本地分支
git branch  branchname     创建
git checkout branchname    切换分支
git checkout -b branchame  创建并切换
git branch -d branchname   删除本地分支
git merge branchname       将分支合并到master
git push origin --delete remote_branch  删除远程分支
git branch --set-upstream  

git push --set-upstream origin dev 创建远程分支 

#7.将本地项目上传到github
#7.1例如新建名为test的项目
cd /test
git init
git add .
git commit -m 'description'
#7.2 由于本地Git仓库和Github仓库之间的传输是通过SSH加密的
ssh-keygen -t rsa -C "xxxxx@xxx.com"
#登陆github，在setting中new ssh key，将rsa_id.pub内容copy到key栏中
#在gtihub中new repository：test
#7.3 将git与github关联
git remote add origin https://github.com/gxxxxx/test.git
#7.4 提交(github项目为空，首次提交需要-u)
git push -u origin master
#7.5 若远程仓库存在README.md文件，会提交失败，需要先合并项目，然后再提交
git pull --rebase origin master
git push -u origin master
